#check if user is root, if not, ask him to log as root
#def root:
    #check if user is root, if not, ask him to log as root then exit
    #if user is root, start function database_interface()

#def database_exists():
    #if database does not exist, start create_user, then create a database, then database_methods()
    #if database exists, check user_login then start the database and start database_methods()

#def database_methods():
    #methods should consist of :
        # Create password
            #function generate_password(), is supposed to store it by querying the database (ask user for other credentials to store)
        # Search password
            #is supposed to query the database with an sql request (with username or website), then decrypt the password and give it back  as (user, email, site, password)
            #give true if task was executed properly or false if password does not exist (false query)
        #update password
            #is supposed to use function search_password first then query the database with an sql update request
            # #give true if task was executed properly or false if password does not exist (false query) 
        # Delete password
            #is supposed to query the database with a delete request
            #give true if task was executed properly or false if password does not exist (false query)

#other functions should consist of:

    #def hash_password():
        #hash any password
    
    #def decrypt_password():
        #decrypt the chosen password
    
    #def check_user():
        #ask user master key login
        #if master key does not exist, ask to create one and hash master_key 